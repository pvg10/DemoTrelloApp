{"ast":null,"code":"import { itemsHasErrored, itemsIsLoading, itemsFetchDataSuccess } from '../actions/userRepos'; // A thunk is a function that returns a function.\n// get user repos\n\nfunction getUserRepos(forUser) {\n  console.log(forUser);\n  return function (dispatch) {\n    dispatch(itemsIsLoading(true));\n    var url = \"https://api.github.com/users/\".concat(forUser, \"/repos\");\n    return fetch(url).then(function (response) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      dispatch(itemsIsLoading(false));\n      return response;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (items) {\n      return dispatch(itemsFetchDataSuccess(items));\n    }).catch(function (error) {\n      return dispatch(itemsHasErrored(error));\n    });\n  };\n}\n\nexport default getUserRepos;","map":{"version":3,"sources":["/Users/admin/Documents/DemoTrelloApp/src/home/thunks/getUserRepos.js"],"names":["itemsHasErrored","itemsIsLoading","itemsFetchDataSuccess","getUserRepos","forUser","console","log","dispatch","url","fetch","then","response","ok","Error","statusText","json","items","catch","error"],"mappings":"AAAA,SACCA,eADD,EAECC,cAFD,EAGCC,qBAHD,QAIO,sBAJP,C,CAMA;AACA;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO,UAAUG,QAAV,EAAoB;AAC1BA,IAAAA,QAAQ,CAACN,cAAc,CAAC,IAAD,CAAf,CAAR;AACA,QAAMO,GAAG,0CAAmCJ,OAAnC,WAAT;AACA,WAAOK,KAAK,CAACD,GAAD,CAAL,CACLE,IADK,CACA,UAACC,QAAD,EAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACDP,MAAAA,QAAQ,CAACN,cAAc,CAAC,KAAD,CAAf,CAAR;AACA,aAAOU,QAAP;AACD,KAPK,EAQLD,IARK,CAQA,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACI,IAAT,EAAd;AAAA,KARA,EASLL,IATK,CASA,UAACM,KAAD;AAAA,aAAWT,QAAQ,CAACL,qBAAqB,CAACc,KAAD,CAAtB,CAAnB;AAAA,KATA,EAULC,KAVK,CAUC,UAACC,KAAD;AAAA,aAAWX,QAAQ,CAACP,eAAe,CAACkB,KAAD,CAAhB,CAAnB;AAAA,KAVD,CAAP;AAWA,GAdD;AAeD;;AAED,eAAef,YAAf","sourcesContent":["import {\n\titemsHasErrored,\n\titemsIsLoading,\n\titemsFetchDataSuccess\n} from '../actions/userRepos';\n\n// A thunk is a function that returns a function.\n// get user repos\nfunction getUserRepos(forUser) {\n  console.log(forUser)\n  return function (dispatch) {\n  \tdispatch(itemsIsLoading(true));\n  \tconst url = `https://api.github.com/users/${forUser}/repos`\n  \treturn fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      dispatch(itemsIsLoading(false));\n      return response;\n    })\n    .then((response) => response.json())\n    .then((items) => dispatch(itemsFetchDataSuccess(items)))\n    .catch((error) => dispatch(itemsHasErrored(error)));\n  };\n}\n\nexport default getUserRepos;"]},"metadata":{},"sourceType":"module"}